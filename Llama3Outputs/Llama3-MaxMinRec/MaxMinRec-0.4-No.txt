Here is the JUnit 4 test class for the `MaxMin4` class:
```
package ds;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;
import ds.*;

public class MaxMin4Test {

    private int[] v;

    @Before
    public void setup() {
        v = new int[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    }

    @Test(timeout = 1000)
    public void testMaxMin4_SingleElement() throws Exception {
        int[] result = MaxMin4.maxMin4(v, 0, 0);
        assertEquals(1, result[0]);
        assertEquals(1, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin4_TwoElements_Swap() throws Exception {
        int[] result = MaxMin4.maxMin4(v, 0, 1);
        assertEquals(2, result[0]);
        assertEquals(1, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin4_TwoElements_NoSwap() throws Exception {
        int[] result = MaxMin4.maxMin4(v, 1, 0);
        assertEquals(2, result[0]);
        assertEquals(1, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin4_MultipleElements() throws Exception {
        int[] result = MaxMin4.maxMin4(v, 0, 9);
        assertEquals(10, result[0]);
        assertEquals(1, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin4_NegativeIndices() throws Exception {
        int[] result = MaxMin4.maxMin4(v, -1, 9);
        assertEquals(10, result[0]);
        assertEquals(1, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin4_OutOfBounds() throws Exception {
        try {
            MaxMin4.maxMin4(v, 10, 11);
            fail("Expected ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            // expected
        }
    }

    @Test(timeout = 1000)
    public void testMaxMin4_NullArray() throws Exception {
        try {
            MaxMin4.maxMin4(null, 0, 1);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            // expected
        }
    }

    @Test(timeout = 1000)
    public void testMaxMin4_DefaultConstructor() throws Exception {
        new MaxMin4(); // just test that the default constructor doesn't throw an exception
    }
}
```
Note that I've covered all the decisions in the `maxMin4` method, including the base case, recursive case, and boundary values. I've also tested for `NullPointerException` and `ArrayIndexOutOfBoundsException` as required.