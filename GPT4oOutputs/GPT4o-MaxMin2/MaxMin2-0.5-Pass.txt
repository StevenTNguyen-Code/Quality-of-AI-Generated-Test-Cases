```java
package ds;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;
import ds.*;

public class MaxMin2Test {

    private MaxMin2 maxMin2;

    @Before
    public void setUp() throws Exception {
        maxMin2 = new MaxMin2();
    }

    @Test(timeout=1000)
    public void testMaxMin2WithPositiveNumbers() throws Exception {
        int[] input = {1, 3, 5, 7, 9};
        int n = input.length;
        int[] result = MaxMin2.maxMin2(input, n);
        assertArrayEquals(new int[] {9, 1}, result);
    }

    @Test(timeout=1000)
    public void testMaxMin2WithNegativeNumbers() throws Exception {
        int[] input = {-1, -3, -5, -7, -9};
        int n = input.length;
        int[] result = MaxMin2.maxMin2(input, n);
        assertArrayEquals(new int[] {-1, -9}, result);
    }

    @Test(timeout=1000)
    public void testMaxMin2WithMixedNumbers() throws Exception {
        int[] input = {3, -1, 4, -2, 5};
        int n = input.length;
        int[] result = MaxMin2.maxMin2(input, n);
        assertArrayEquals(new int[] {5, -2}, result);
    }

    @Test(timeout=1000)
    public void testMaxMin2WithSingleElement() throws Exception {
        int[] input = {42};
        int n = input.length;
        int[] result = MaxMin2.maxMin2(input, n);
        assertArrayEquals(new int[] {42, 42}, result);
    }

    @Test(timeout=1000)
    public void testMaxMin2WithTwoElements() throws Exception {
        int[] input = {3, 7};
        int n = input.length;
        int[] result = MaxMin2.maxMin2(input, n);
        assertArrayEquals(new int[] {7, 3}, result);
    }

    @Test(timeout=1000)
    public void testMaxMin2WithEqualElements() throws Exception {
        int[] input = {5, 5, 5, 5};
        int n = input.length;
        int[] result = MaxMin2.maxMin2(input, n);
        assertArrayEquals(new int[] {5, 5}, result);
    }

    @Test(timeout=1000, expected=ArrayIndexOutOfBoundsException.class)
    public void testMaxMin2WithEmptyArray() throws Exception {
        int[] input = {};
        int n = input.length;
        MaxMin2.maxMin2(input, n);
    }

    @Test(timeout=1000)
    public void testMaxMin2WithBoundaryValues() throws Exception {
        int[] input = {Integer.MAX_VALUE, Integer.MIN_VALUE};
        int n = input.length;
        int[] result = MaxMin2.maxMin2(input, n);
        assertArrayEquals(new int[] {Integer.MAX_VALUE, Integer.MIN_VALUE}, result);
    }
}
```

### Explanation of Test Cases:

1. **testMaxMin2WithPositiveNumbers**: Tests the method with an array of positive numbers.
2. **testMaxMin2WithNegativeNumbers**: Tests the method with an array of negative numbers.
3. **testMaxMin2WithMixedNumbers**: Tests the method with an array of mixed positive and negative numbers.
4. **testMaxMin2WithSingleElement**: Tests the method with an array containing a single element.
5. **testMaxMin2WithTwoElements**: Tests the method with an array containing two elements.
6. **testMaxMin2WithEqualElements**: Tests the method with an array where all elements are the same.
7. **testMaxMin2WithEmptyArray**: Tests the method with an empty array, expecting an ArrayIndexOutOfBoundsException.
8. **testMaxMin2WithBoundaryValues**: Tests the method with boundary values, using `Integer.MAX_VALUE` and `Integer.MIN_VALUE`.