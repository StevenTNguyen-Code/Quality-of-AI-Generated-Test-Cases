```java
package ds;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

public class CasamentoExatoTest {

    private CasamentoExato casamentoExato;

    @Before
    public void setUp() {
        casamentoExato = new CasamentoExato();
    }

    @Test(timeout=1000)
    public void testDefaultConstructor() throws Exception {
        assertNotNull("CasamentoExato instance should not be null", casamentoExato);
    }

    @Test(timeout=1000)
    public void testForcaBruta() throws Exception {
        // Test with exact match
        CasamentoExato.forcaBruta("abcde", 5, "bcd", 3);
        // Test with no match
        CasamentoExato.forcaBruta("abcde", 5, "xyz", 3);
        // Test with boundary values
        CasamentoExato.forcaBruta("a", 1, "a", 1);
        CasamentoExato.forcaBruta("a", 1, "b", 1);
    }

    @Test(timeout=1000)
    public void testShiftAndExato() throws Exception {
        // Test with exact match
        CasamentoExato.shiftAndExato("abcde", 5, "bcd", 3);
        // Test with no match
        CasamentoExato.shiftAndExato("abcde", 5, "xyz", 3);
        // Test with boundary values
        CasamentoExato.shiftAndExato("a", 1, "a", 1);
        CasamentoExato.shiftAndExato("a", 1, "b", 1);
    }

    @Test(timeout=1000)
    public void testBmh() throws Exception {
        // Test with exact match
        CasamentoExato.bmh("abcde", 5, "bcd", 3);
        // Test with no match
        CasamentoExato.bmh("abcde", 5, "xyz", 3);
        // Test with boundary values
        CasamentoExato.bmh("a", 1, "a", 1);
        CasamentoExato.bmh("a", 1, "b", 1);
    }

    @Test(timeout=1000)
    public void testBmhs() throws Exception {
        // Test with exact match
        CasamentoExato.bmhs("abcde", 5, "bcd", 3);
        // Test with no match
        CasamentoExato.bmhs("abcde", 5, "xyz", 3);
        // Test with boundary values
        CasamentoExato.bmhs("a", 1, "a", 1);
        CasamentoExato.bmhs("a", 1, "b", 1);
    }
}
```

### Explanation:
1. **Default Constructor Test**: Ensures that an instance of `CasamentoExato` can be created.
2. **Test Methods**: Each method (`forcaBruta`, `shiftAndExato`, `bmh`, `bmhs`) is tested with:
   - Exact match scenario.
   - No match scenario.
   - Boundary values (single character strings).
3. **Timeout**: Each test has a timeout of 1000 milliseconds.
4. **Exception Handling**: Each test method declares `throws Exception` to comply with the prompt requirements.

These tests cover the basic functionality and boundary conditions of the methods in the `CasamentoExato` class.