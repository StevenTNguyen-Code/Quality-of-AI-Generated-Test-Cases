Sure, here are the unit tests for the `CasamentoExato` class using JUnit 4:

```java
package ds;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;
import ds.*;

public class CasamentoExatoTest {

    private CasamentoExato casamentoExato;

    @Before
    public void setUp() {
        casamentoExato = new CasamentoExato();
    }

    @Test(timeout=1000)
    public void testDefaultConstructor() throws Exception {
        assertNotNull(new CasamentoExato());
    }

    @Test(timeout=1000)
    public void testForcaBrutaMatch() throws Exception {
        String T = "abcde";
        String P = "bcd";
        CasamentoExato.forcaBruta(T, T.length(), P, P.length());
        // Expected output: "Casamento na posicao: 1"
    }

    @Test(timeout=1000)
    public void testForcaBrutaNoMatch() throws Exception {
        String T = "abcde";
        String P = "xyz";
        CasamentoExato.forcaBruta(T, T.length(), P, P.length());
        // Expected output: No match found
    }

    @Test(timeout=1000)
    public void testShiftAndExatoMatch() throws Exception {
        String T = "abcde";
        String P = "bcd";
        CasamentoExato.shiftAndExato(T, T.length(), P, P.length());
        // Expected output: "Casamento na posicao: 1"
    }

    @Test(timeout=1000)
    public void testShiftAndExatoNoMatch() throws Exception {
        String T = "abcde";
        String P = "xyz";
        CasamentoExato.shiftAndExato(T, T.length(), P, P.length());
        // Expected output: No match found
    }

    @Test(timeout=1000)
    public void testBmhMatch() throws Exception {
        String T = "abcde";
        String P = "bcd";
        CasamentoExato.bmh(T, T.length(), P, P.length());
        // Expected output: "Casamento na posicao: 1"
    }

    @Test(timeout=1000)
    public void testBmhNoMatch() throws Exception {
        String T = "abcde";
        String P = "xyz";
        CasamentoExato.bmh(T, T.length(), P, P.length());
        // Expected output: No match found
    }

    @Test(timeout=1000)
    public void testBmhsMatch() throws Exception {
        String T = "abcde";
        String P = "bcd";
        CasamentoExato.bmhs(T, T.length(), P, P.length());
        // Expected output: "Casamento na posicao: 1"
    }

    @Test(timeout=1000)
    public void testBmhsNoMatch() throws Exception {
        String T = "abcde";
        String P = "xyz";
        CasamentoExato.bmhs(T, T.length(), P, P.length());
        // Expected output: No match found
    }

    @Test(timeout=1000)
    public void testForcaBrutaBoundary() throws Exception {
        String T = "a";
        String P = "a";
        CasamentoExato.forcaBruta(T, T.length(), P, P.length());
        // Expected output: "Casamento na posicao: 0"
    }

    @Test(timeout=1000)
    public void testShiftAndExatoBoundary() throws Exception {
        String T = "a";
        String P = "a";
        CasamentoExato.shiftAndExato(T, T.length(), P, P.length());
        // Expected output: "Casamento na posicao: 0"
    }

    @Test(timeout=1000)
    public void testBmhBoundary() throws Exception {
        String T = "a";
        String P = "a";
        CasamentoExato.bmh(T, T.length(), P, P.length());
        // Expected output: "Casamento na posicao: 0"
    }

    @Test(timeout=1000)
    public void testBmhsBoundary() throws Exception {
        String T = "a";
        String P = "a";
        CasamentoExato.bmhs(T, T.length(), P, P.length());
        // Expected output: "Casamento na posicao: 0"
    }
}
```

These tests cover the following:
- Default constructor.
- Each method (`forcaBruta`, `shiftAndExato`, `bmh`, `bmhs`) with both matching and non-matching cases.
- Boundary values for each method.

Note: The expected output comments are for reference. The actual output will be printed to the console, and you may need to verify it manually or redirect the output to capture it programmatically.