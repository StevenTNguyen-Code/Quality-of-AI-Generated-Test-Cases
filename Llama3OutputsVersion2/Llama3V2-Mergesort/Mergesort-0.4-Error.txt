Here is the test class for the `Ordenacao` class:
```
package ds;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

public class OrdenacaoTest {

    private int[] array;

    @Before
    public void setUp() {
        array = new int[] {5, 2, 8, 3, 1, 4, 6};
    }

    @Test(timeout = 1000)
    public void testMergeSort() throws Exception {
        Ordenacao.mergeSort(array, 0, array.length - 1);
        int[] expected = new int[] {1, 2, 3, 4, 5, 6, 8};
        assertArrayEquals(expected, array);
    }

    @Test(timeout = 1000)
    public void testMergeSortEmptyArray() throws Exception {
        int[] emptyArray = new int[0];
        Ordenacao.mergeSort(emptyArray, 0, emptyArray.length - 1);
        assertArrayEquals(new int[0], emptyArray);
    }

    @Test(timeout = 1000)
    public void testMergeSortSingleElementArray() throws Exception {
        int[] singleElementArray = new int[] {5};
        Ordenacao.mergeSort(singleElementArray, 0, singleElementArray.length - 1);
        assertArrayEquals(new int[] {5}, singleElementArray);
    }

    @Test(timeout = 1000)
    public void testMerge() throws Exception {
        int[] array = new int[] {2, 1};
        Ordenacao.merge(array, 0, 0, 1);
        int[] expected = new int[] {1, 2};
        assertArrayEquals(expected, array);
    }

    @Test(timeout = 1000)
    public void testMergeNegativeNumbers() throws Exception {
        int[] array = new int[] {-2, -1};
        Ordenacao.merge(array, 0, 0, 1);
        int[] expected = new int[] {-2, -1};
        assertArrayEquals(expected, array);
    }

    @Test(timeout = 1000)
    public void testMergeBoundaryValues() throws Exception {
        int[] array = new int[] {Integer.MAX_VALUE, Integer.MIN_VALUE};
        Ordenacao.merge(array, 0, 0, 1);
        int[] expected = new int[] {Integer.MIN_VALUE, Integer.MAX_VALUE};
        assertArrayEquals(expected, array);
    }

    @Test(timeout = 1000)
    public void testDefaultConstructor() throws Exception {
        new Ordenacao();
    }
}
```
Note that I've tested the `mergeSort` method with different scenarios, including an empty array, a single-element array, and an array with multiple elements. I've also tested the `merge` method with different scenarios, including negative numbers and boundary values. Additionally, I've tested the default constructor to ensure it doesn't throw any exceptions.