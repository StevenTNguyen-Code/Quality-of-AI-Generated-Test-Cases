Here is the test class for the `Ordenacao` class:
```
package ds;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

public class OrdenacaoTest {

    private int[] arr;

    @Before
    public void setUp() {
        arr = new int[]{5, 2, 8, 3, 1, 6, 4};
    }

    @Test(timeout = 1000)
    public void testMergeSort() throws Exception {
        Ordenacao.mergeSort(arr, 0, arr.length - 1);
        int[] expected = new int[]{1, 2, 3, 4, 5, 6, 8};
        assertArrayEquals(expected, arr);
    }

    @Test(timeout = 1000)
    public void testMerge() throws Exception {
        int[] arr = new int[]{2, 4, 1, 3};
        Ordenacao.merge(arr, 0, 1, 3);
        int[] expected = new int[]{1, 2, 3, 4};
        assertArrayEquals(expected, arr);
    }

    @Test(timeout = 1000)
    public void testMergeSort_EmptyArray() throws Exception {
        int[] arr = new int[0];
        Ordenacao.mergeSort(arr, 0, arr.length - 1);
        int[] expected = new int[0];
        assertArrayEquals(expected, arr);
    }

    @Test(timeout = 1000)
    public void testMergeSort_SingleElementArray() throws Exception {
        int[] arr = new int[]{5};
        Ordenacao.mergeSort(arr, 0, arr.length - 1);
        int[] expected = new int[]{5};
        assertArrayEquals(expected, arr);
    }

    @Test(timeout = 1000)
    public void testMergeSort_NegativeValues() throws Exception {
        int[] arr = new int[]{-5, -2, -8, -3, -1, -6, -4};
        Ordenacao.mergeSort(arr, 0, arr.length - 1);
        int[] expected = new int[]{-8, -6, -5, -4, -3, -2, -1};
        assertArrayEquals(expected, arr);
    }

    @Test(timeout = 1000)
    public void testMergeSort_BoundaryValues() throws Exception {
        int[] arr = new int[]{Integer.MIN_VALUE, 0, Integer.MAX_VALUE};
        Ordenacao.mergeSort(arr, 0, arr.length - 1);
        int[] expected = new int[]{Integer.MIN_VALUE, 0, Integer.MAX_VALUE};
        assertArrayEquals(expected, arr);
    }

    @Test(timeout = 1000)
    public void testDefaultConstructor() throws Exception {
        Ordenacao ordenacao = new Ordenacao();
        assertNotNull(ordenacao);
    }
}
```
Note that I've covered all the decision points in the `merge` and `mergeSort` methods, including boundary values and negative values. I've also tested the default constructor and included a test for an empty array and a single-element array.