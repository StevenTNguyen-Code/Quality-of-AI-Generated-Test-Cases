Here is the unit test class for the `MaxMin1` class:
```
package ds;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

public class MaxMin1Test {

    @Test(timeout = 1000)
    public void testMaxMin1DefaultConstructor() throws Exception {
        MaxMin1 maxMin1 = new MaxMin1();
        assertNotNull(maxMin1);
    }

    @Test(timeout = 1000)
    public void testMaxMin1NullInput() throws Exception {
        int[] v = null;
        try {
            MaxMin1.maxMin1(v, 0);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            // expected
        }
    }

    @Test(timeout = 1000)
    public void testMaxMin1EmptyArray() throws Exception {
        int[] v = new int[0];
        try {
            MaxMin1.maxMin1(v, 0);
            fail("Expected ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            // expected
        }
    }

    @Test(timeout = 1000)
    public void testMaxMin1SingleElementArray() throws Exception {
        int[] v = new int[] {5};
        int[] result = MaxMin1.maxMin1(v, 1);
        assertEquals(5, result[0]);
        assertEquals(5, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1MultipleElementsArray() throws Exception {
        int[] v = new int[] {3, 1, 4, 2, 5};
        int[] result = MaxMin1.maxMin1(v, 5);
        assertEquals(5, result[0]);
        assertEquals(1, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1NegativeValues() throws Exception {
        int[] v = new int[] {-3, -1, -4, -2, -5};
        int[] result = MaxMin1.maxMin1(v, 5);
        assertEquals(-1, result[0]);
        assertEquals(-5, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1MixedValues() throws Exception {
        int[] v = new int[] {-3, 1, -4, 2, 5};
        int[] result = MaxMin1.maxMin1(v, 5);
        assertEquals(5, result[0]);
        assertEquals(-4, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1BoundaryValues() throws Exception {
        int[] v = new int[] {Integer.MAX_VALUE, Integer.MIN_VALUE};
        int[] result = MaxMin1.maxMin1(v, 2);
        assertEquals(Integer.MAX_VALUE, result[0]);
        assertEquals(Integer.MIN_VALUE, result[1]);
    }
}
```
Note that I've covered all the possible scenarios for the `maxMin1` method, including:

* Default constructor test
* Null input test
* Empty array test
* Single element array test
* Multiple elements array test
* Negative values test
* Mixed values test
* Boundary values test (using `Integer.MAX_VALUE` and `Integer.MIN_VALUE`)

Each test method has a timeout of 1000 milliseconds and throws an `Exception` to ensure that the test will fail if an unexpected exception is thrown.