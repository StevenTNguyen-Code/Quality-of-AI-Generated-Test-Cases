Here is the test class for the `MaxMin1` class:
```
package ds;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

public class MaxMin1Test {

    @Test(timeout = 1000)
    public void testMaxMin1DefaultConstructor() throws Exception {
        MaxMin1 maxMin1 = new MaxMin1();
        // no-op, just testing that the default constructor works
    }

    @Test(timeout = 1000)
    public void testMaxMin1SingleElementArray() throws Exception {
        int[] v = {1};
        int[] result = MaxMin1.maxMin1(v, 1);
        assertEquals(1, result[0]);
        assertEquals(1, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1MultipleElementsArray() throws Exception {
        int[] v = {3, 1, 4, 2};
        int[] result = MaxMin1.maxMin1(v, 4);
        assertEquals(4, result[0]);
        assertEquals(1, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1NegativeValues() throws Exception {
        int[] v = {-3, -1, -4, -2};
        int[] result = MaxMin1.maxMin1(v, 4);
        assertEquals(-1, result[0]);
        assertEquals(-4, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1MixedValues() throws Exception {
        int[] v = {-3, 1, 4, -2};
        int[] result = MaxMin1.maxMin1(v, 4);
        assertEquals(4, result[0]);
        assertEquals(-3, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1EmptyArray() throws Exception {
        int[] v = {};
        try {
            MaxMin1.maxMin1(v, 0);
            fail("Expected ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            // expected
        }
    }

    @Test(timeout = 1000)
    public void testMaxMin1NullArray() throws Exception {
        int[] v = null;
        try {
            MaxMin1.maxMin1(v, 1);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            // expected
        }
    }
}
```
Note that I've covered the following test cases:

* Testing the default constructor
* Single element array
* Multiple elements array
* Negative values
* Mixed values
* Empty array (expected `ArrayIndexOutOfBoundsException`)
* Null array (expected `NullPointerException`)

I've also made sure to include the `timeout=1000` in each `@Test` annotation, and thrown `Exception` in each test method declaration.