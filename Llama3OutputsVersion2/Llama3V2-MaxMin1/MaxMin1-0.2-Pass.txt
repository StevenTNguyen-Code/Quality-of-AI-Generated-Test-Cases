Here is the JUnit test class for the `MaxMin1` class:
```
package ds;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

public class MaxMin1Test {

    @Before
    public void setup() {
        // No setup needed for this test
    }

    @Test(timeout = 1000)
    public void testMaxMin1_DefaultConstructor() throws Exception {
        // Test default constructor
        MaxMin1 maxMin1 = new MaxMin1();
        assertNotNull(maxMin1);
    }

    @Test(timeout = 1000)
    public void testMaxMin1_SingleElementArray() throws Exception {
        // Test with single element array
        int[] v = {5};
        int[] result = MaxMin1.maxMin1(v, 1);
        assertEquals(5, result[0]);
        assertEquals(5, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1_MultipleElementsArray_PositiveValues() throws Exception {
        // Test with multiple elements array with positive values
        int[] v = {3, 1, 4, 2};
        int[] result = MaxMin1.maxMin1(v, 4);
        assertEquals(4, result[0]);
        assertEquals(1, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1_MultipleElementsArray_NegativeValues() throws Exception {
        // Test with multiple elements array with negative values
        int[] v = {-3, -1, -4, -2};
        int[] result = MaxMin1.maxMin1(v, 4);
        assertEquals(-1, result[0]);
        assertEquals(-4, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1_MultipleElementsArray_MixedValues() throws Exception {
        // Test with multiple elements array with mixed values
        int[] v = {-3, 1, 4, -2};
        int[] result = MaxMin1.maxMin1(v, 4);
        assertEquals(4, result[0]);
        assertEquals(-3, result[1]);
    }

    @Test(timeout = 1000)
    public void testMaxMin1_EmptyArray() throws Exception {
        // Test with empty array
        int[] v = {};
        try {
            MaxMin1.maxMin1(v, 0);
            fail("Expected ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            // Expected exception
        }
    }

    @Test(timeout = 1000)
    public void testMaxMin1_NullArray() throws Exception {
        // Test with null array
        int[] v = null;
        try {
            MaxMin1.maxMin1(v, 0);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            // Expected exception
        }
    }
}
```
Note that I've covered all the possible scenarios for the `maxMin1` method, including:

* Single element array
* Multiple elements array with positive values
* Multiple elements array with negative values
* Multiple elements array with mixed values
* Empty array
* Null array

I've also tested the default constructor of the `MaxMin1` class.

Please let me know if you need any further modifications.