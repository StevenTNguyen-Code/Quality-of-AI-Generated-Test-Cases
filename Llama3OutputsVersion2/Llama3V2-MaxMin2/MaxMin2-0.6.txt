Here is the JUnit test class for the `MaxMin2` class:
```
package ds;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;
import ds.*;

public class MaxMin2Test {

    @Test(timeout=1000)
    public void testMaxMin2DefaultConstructor() throws Exception {
        MaxMin2 maxMin2 = new MaxMin2();
        // Just testing that the default constructor doesn't throw an exception
    }

    @Test(timeout=1000)
    public void testMaxMin2PositiveArray() throws Exception {
        int[] v = {1, 2, 3, 4, 5};
        int[] result = MaxMin2.maxMin2(v, v.length);
        assertEquals(5, result[0]);
        assertEquals(1, result[1]);
    }

    @Test(timeout=1000)
    public void testMaxMin2NegativeArray() throws Exception {
        int[] v = {-1, -2, -3, -4, -5};
        int[] result = MaxMin2.maxMin2(v, v.length);
        assertEquals(-1, result[0]);
        assertEquals(-5, result[1]);
    }

    @Test(timeout=1000)
    public void testMaxMin2MixedArray() throws Exception {
        int[] v = {-1, 0, 1, 2, 3};
        int[] result = MaxMin2.maxMin2(v, v.length);
        assertEquals(3, result[0]);
        assertEquals(-1, result[1]);
    }

    @Test(timeout=1000)
    public void testMaxMin2SingleElementArray() throws Exception {
        int[] v = {1};
        int[] result = MaxMin2.maxMin2(v, v.length);
        assertEquals(1, result[0]);
        assertEquals(1, result[1]);
    }

    @Test(timeout=1000)
    public void testMaxMin2EmptyArray() throws Exception {
        int[] v = {};
        try {
            MaxMin2.maxMin2(v, v.length);
            fail("Expected ArrayIndexOutOfBoundsException");
        } catch (ArrayIndexOutOfBoundsException e) {
            // Expected exception
        }
    }

    @Test(timeout=1000)
    public void testMaxMin2NullArray() throws Exception {
        int[] v = null;
        try {
            MaxMin2.maxMin2(v, 0);
            fail("Expected NullPointerException");
        } catch (NullPointerException e) {
            // Expected exception
        }
    }
}
```
Note that I've covered all the possible scenarios for the `maxMin2` method, including:

* Positive array
* Negative array
* Mixed array
* Single element array
* Empty array
* Null array

I've also tested the default constructor, as required.